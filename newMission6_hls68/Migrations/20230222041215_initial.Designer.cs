// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using newMission6_hls68.Models;

namespace newMission6_hls68.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20230222041215_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("newMission6_hls68.Models.ApplicationResponse", b =>
                {
                    b.Property<int>("movieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("categoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("lentTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("year")
                        .HasColumnType("INTEGER");

                    b.HasKey("movieId");

                    b.HasIndex("categoryId");

                    b.ToTable("responses");

                    b.HasData(
                        new
                        {
                            movieId = 1,
                            categoryId = 3,
                            director = " Hayao Miyazaki",
                            edited = false,
                            lentTo = "Hannah",
                            notes = "This is a classic!",
                            rating = "G",
                            title = "Kiki's Delivery Service",
                            year = 1989
                        },
                        new
                        {
                            movieId = 2,
                            categoryId = 3,
                            director = " Hayao Miyazaki",
                            edited = false,
                            lentTo = "Daniel",
                            notes = "Love this movie!",
                            rating = "G",
                            title = "Ponyo",
                            year = 2008
                        },
                        new
                        {
                            movieId = 3,
                            categoryId = 4,
                            director = "Aaron Blaise",
                            edited = false,
                            lentTo = "Ben",
                            notes = "This is my favorite!",
                            rating = "PG",
                            title = "Brother Bear",
                            year = 2003
                        });
                });

            modelBuilder.Entity("newMission6_hls68.Models.Category", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("categoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("categoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            categoryId = 1,
                            categoryName = "Action"
                        },
                        new
                        {
                            categoryId = 2,
                            categoryName = "Romance"
                        },
                        new
                        {
                            categoryId = 3,
                            categoryName = "Anime"
                        },
                        new
                        {
                            categoryId = 4,
                            categoryName = "Comedy"
                        });
                });

            modelBuilder.Entity("newMission6_hls68.Models.ApplicationResponse", b =>
                {
                    b.HasOne("newMission6_hls68.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
